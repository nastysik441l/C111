version: '3'
services:
  # Для определения кому обрабатывать тот или иной запрос мне нужен посредник
  # он по части маршрута определит - какой из контейнеров должен обработать запрос
  # в идеале - он передаст запрос самому свободному контейнеру (но это уже работа devOps)
  api.gateway:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:80"
  # Этот контейнер будет работать с авторизацией и аутентификацией пользователя
  api.auth:
    build: ./backend/auth_1
    volumes:
      - ./backend/auth_1/src:/usr/src/app
    command: sh -c " npm install && npm start "
    container_name: api.auth_1
    env_file:
      - .env
  # Контейнер для обмена сообщениями по WebSocket соединению
  socket.jonny:
    build: ./notifications/websocket
    volumes:
      - ./notifications/websocket/src:/usr/src/app
    command: sh -c " npm install && npm start "
    container_name: socket.jonny
    environment:
      - SERVER_NAME=SocketJonny
      - SERVER_PORT=80
    env_file:
      - .env

  # Контейнер используется для агрегации сообщений по WebSocket протоколу
  redis.sockets:
    image: 'redis:alpine'
    volumes:
      - './volumes/db/redis/sockets:/data'
  front.public:
    build: ./front/public
    volumes:
      - ./front/public:/usr/src/app
    command: sh -c " npm install && npm start "